/* treap.js v0.0.1, MIT License https://github.com/dylan/treap.js/blob/master/LICENSE */
var Node,Treap;Node=function(){function a(a,b,c){this.priority=c,this.key=a,this.value=b,this.right=this.left=void 0}return a}(),Treap=function(){function a(a){return this.comparator=void 0,this.root=void 0,this.count=0,a||(this.comparator=function(a,b){return b>a}),this}return a.prototype._rand=function(){return Math.random()},a.prototype.reset=function(){return this.root=void 0,this.count=0},a.prototype.get=function(a){return this._get(this.root,a)},a.prototype._get=function(node,a){return null==node?void 0:this.comparator(a,node.key)?this._get(node.left,a):this.comparator(node.key,a)?this._get(node.right,a):node.value},a.prototype.insert=function(a,b){var c;return c=this._rand(),this.root=this._insert(this.root,a,b,c),this},a.prototype._insert=function(node,a,b,c){return null==node?(this.count++,new Node(a,b,c)):this.comparator(a,node.key)?(node.left=this._insert(node.left,a,b,c),node.left.priority<node.priority?this.leftRotate(node):node):this.comparator(node.key,a)?(node.right=this._insert(node.right,a,b,c),node.right.priority<node.priority?this.rightRotate(node):node):(node.value=b,node)},a.prototype["delete"]=function(a){return null!=this.exists(a)?this.root=this._delete(this.root,a):void 0},a.prototype._delete=function(node,a){var b,c;if(null==node)throw new Error("key not found");return this.comparator(a,node.key)?(b=node,c=node.left,b.left=this._delete(c,a),b):this.comparator(node.key,a)?(b=node,c=node.right,b.right=this._delete(c,a),b):(this.count--,this.merge(node.left,node.right))},a.prototype.merge=function(a,b){var c,d;return null==a?b:null==b?a:a.priority<b.priority?(c=a,d=a.right,c.right=this.merge(d,b),c):(c=b,d=b.left,c.left=this.merge(d,a),c)},a.prototype.split=function(a){var b;return b=this._insert(this.root,a,null,-1),[b.left,b.right]},a.prototype.leftRotate=function(node){var a,b;return a=node.left,b=a.right,a.right=node,node.left=b,a},a.prototype.rightRotate=function(node){var a,b;return a=node.right,b=a.left,a.left=node,node.right=b,a},a.prototype.exists=function(a){return this._exists(this.root,a)},a.prototype._exists=function(node,a){return null==node?!1:this.comparator(a,node.key)?this._exists(node.left,a):this.comparator(node.key,a)?this._exists(node.right,a):!0},a.prototype.height=function(a){return this._height(this.root,a)},a.prototype._height=function(node,a){var b;return null==node?0:this.comparator(a,node.key)?(b=this._height(node.left,a),b+1):this.comparator(node.key,a)?(b=this._height(node.right,a),b+1):0},a.prototype.length=function(){return this.count},a}();